<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Fetch應用</title>
    <url>/2020/07/27/2020/Fetch%E6%87%89%E7%94%A8/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近參加了六角的js學徒特訓班，剛好需要抓取遠端資料，之前有嘗試過<code>XMLHttpRequest</code>和框架<code>axios</code>，這次來試試看如果使用Fetch是要怎麼抓取資料</p>
<a id="more"></a>

<h2 id="Fetch"><a href="#Fetch" class="headerlink" title="Fetch"></a>Fetch</h2><figure class="highlight plain"><figcaption><span>Fetch</span></figcaption><table><tr><td class="code"><pre><span class="line">fetch(&apos;https://randomuser.me/api/&apos;, &#123;&#125;)</span><br><span class="line">.then((response) =&gt; &#123;</span><br><span class="line">    // 這裡會得到一個 ReadableStream 的物件</span><br><span class="line">    console.log(response);</span><br><span class="line">    // 可以透過 blob(), json(), text() 轉成可用的資訊</span><br><span class="line">    return response.json(); </span><br><span class="line">&#125;).then((jsonData) =&gt; &#123;</span><br><span class="line">    console.log(jsonData);</span><br><span class="line">&#125;).catch((err) =&gt; &#123;</span><br><span class="line">    console.log(&apos;錯誤:&apos;, err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="string">'https://hexschool-tutorial.herokuapp.com/api/signup'</span>;</span><br><span class="line">fetch(url, &#123;</span><br><span class="line">  method: <span class="string">'POST'</span>,</span><br><span class="line">  <span class="comment">// headers 加入 json 格式</span></span><br><span class="line">  headers: &#123;</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// body 將 json 轉字串送出</span></span><br><span class="line">  body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">    email: <span class="string">'lovef1232e@hexschool.com'</span>,</span><br><span class="line">    password: <span class="string">'12345678'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.json(); </span><br><span class="line">  &#125;).then(<span class="function">(<span class="params">jsonData</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(jsonData);</span><br><span class="line">  &#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'錯誤:'</span>, err);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="常見參數"><a href="#常見參數" class="headerlink" title="常見參數"></a>常見參數</h3><p><code>blur()</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p class=&quot;codepen&quot; data-height=&quot;300&quot; data-theme-id=&quot;37551&quot; data-default-tab=&quot;js,result&quot; data-user=&quot;yennnnn&quot; data-slug-hash=&quot;dyGdjmE&quot; style=&quot;height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;第二一關BMI&quot;&gt;</span><br><span class="line">  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/yennnnn/pen/dyGdjmE&quot;&gt;</span><br><span class="line">  第二一關BMI&lt;/a&gt; by yanennn (&lt;a href=&quot;https://codepen.io/yennnnn&quot;&gt;@yennnnn&lt;/a&gt;)</span><br><span class="line">  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;script async src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<iframe height="300" style="width: 100%;" scrolling="no" title="第三十六關" src="https://codepen.io/yennnnn/embed/PoZgyQe?height=300&theme-id=37551&default-tab=js,result" frameborder="no" allowtransparency="true" allowfullscreen="true">
  See the Pen <a href="https://codepen.io/yennnnn/pen/PoZgyQe" target="_blank" rel="noopener">第三十六關</a> by yanennn
  (<a href="https://codepen.io/yennnnn" target="_blank" rel="noopener">@yennnnn</a>) on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>. </iframe>

  <img src="https://imgur.com/nanfWVG.png" class="[imggg]">
<p>  <img src="https://i.imgur.com/Vz7O0L2.jpg" alt="aaaaa"></p>
<a href="https://ithelp.ithome.com.tw/articles/10194388" target="_blank" rel="noopener">[功能介紹]</a>

<p><a href="https://www.itdaan.com/tw/36577774e82c253cffa236a9608d8aa4" target="_blank" rel="noopener">結合promise對原生fetch的兩個then用法理解</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>AJAX</tag>
      </tags>
  </entry>
</search>
